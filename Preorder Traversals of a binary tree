#include <iostream>
using namespace std;

// Definition for a binary tree node
struct TreeNode {
    int val;
    TreeNode* left;
    TreeNode* right;
    TreeNode(int x) : val(x), left(NULL), right(NULL) {}
};

// Function to perform postorder traversal
void postorderTraversal(TreeNode* root) {
    if (root == NULL) return;

    // Recur on the left subtree
    postorderTraversal(root->left);

    // Recur on the right subtree
    postorderTraversal(root->right);

    // Print the value of the node
    cout << root->val << " ";
}

int main() {
    // Creating a simple binary tree
    TreeNode* root = new TreeNode(1);
    root->left = new TreeNode(2);
    root->right = new TreeNode(3);
    root->left->left = new TreeNode(4);
    root->left->right = new TreeNode(5);
    root->right->left = new TreeNode(6);
    root->right->right = new TreeNode(7);

    // Performing postorder traversal
    cout << "Postorder Traversal: ";
    postorderTraversal(root);
    cout << endl;

    // Clean up the tree (delete allocated nodes)
    delete root->right->right;
    delete root->right->left;
    delete root->right;
    delete root->left->right;
    delete root->left->left;
    delete root->left;
    delete root;

    return 0;
}
